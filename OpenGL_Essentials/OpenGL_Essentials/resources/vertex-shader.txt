#version 400 core 

layout (location = 0) in vec3 vert_position; 
layout (location = 1) in vec2 vert_texCoord;
layout (location = 2) in vec3 vert_normal;

out vec3 vPosition;
out vec3 vNormalColor;
out vec2 vTexCoord;

uniform mat4 projection;
uniform mat4 camera;
uniform mat4 model;

void main() {

    vPosition = vert_position;

    // Pass the tex coord straight through to the fragment shader
    vTexCoord = vert_texCoord;

    vNormalColor = vert_normal;

    // Apply all matrix transformations to vert
    gl_Position = projection * camera * model * vec4(vert_position, 1.0);

}

